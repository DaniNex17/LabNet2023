@model Lab.Net.MVC.Models.ProductsView
@{
    ViewBag.Title = "Productos";
}
<h1>Editar Productos</h1>

@using (Html.BeginForm("Update", "Products", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group mt-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Actualizar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar a la lista", "Index")
</div>

<style>
    .field-validation-error {
        color: red;
    }

    .input-validation-error {
        border: 1px solid red;
    }
</style>
